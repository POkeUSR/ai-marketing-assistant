import streamlit as st
from prompt_templates import PROMPT_MODELS
import openai

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ OpenAI
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))


# –ö–Ω–æ–ø–∫–∞ —Å —Ñ–ª–∞–≥–æ–º
if st.button("‚Ñπ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç"):
    st.session_state.show_help = not st.session_state.get("show_help", False)

# –£—Å–ª–æ–≤–Ω—ã–π –±–ª–æ–∫ ‚Äî –ø—Å–µ–≤–¥–æ-popup
if st.session_state.get("show_help", False):
    st.markdown("---")
    st.markdown("## ‚ùì –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç")
    st.markdown("""
    1. **–í–≤–µ–¥–∏—Ç–µ:**
       - üéØ –¶–ê (–Ω–∞–ø—Ä–∏–º–µ—Ä: –º–æ–ª–æ–¥–∞—è –º–∞–º–∞, –±–∏–∑–Ω–µ—Å–º–µ–Ω, –ø–æ–¥—Ä–æ—Å—Ç–æ–∫ –∏ —Ç.–¥.)
       - üí¢ –ü—Ä–æ–±–ª–µ–º—É (—á—Ç–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç –∫–ª–∏–µ–Ω—Ç–∞)
       - üì¶ –í–∞—à –ø—Ä–æ–¥—É–∫—Ç/—É—Å–ª—É–≥—É

    2. **–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∫–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥–∞:**
       - AIDA, PAS, BAB, 4U –∏ –¥—Ä—É–≥–∏–µ

    3. **–ù–∞–∂–º–∏—Ç–µ ‚Äú–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å‚Äù**

    4. ü§ñ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞—Å—Ç:
       - –ó–∞–≥–æ–ª–æ–≤–æ–∫
       - –û—Ñ—Ñ–µ—Ä
       - –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
       - –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥ —Ä–µ–∫–ª–∞–º—É –Ø–Ω–¥–µ–∫—Å –î–∏—Ä–µ–∫—Ç
 
    """)
    st.markdown("---")



st.set_page_config(page_title="AI-–∫—Ä–µ–∞—Ç–∏–≤—ã –¥–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞", page_icon="üéØ", layout="centered")

st.title("üéØ AI‚Äë–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ –ø–æ 13 —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º –ø—Ä–æ–¥–∞—é—â–µ–≥–æ —Ç–µ–∫—Å—Ç–∞")


import random

# üé≤ –°–ø–∏—Å–æ–∫ —Å–ª—É—á–∞–π–Ω—ã—Ö –ø–æ—Ä—Ç—Ä–µ—Ç–æ–≤
random_profiles = [
    {
        "audience": "–ú–æ–ª–æ–¥–∞—è –º–∞–º–∞, 28 –ª–µ—Ç",
        "problem": "–£—Å—Ç–∞—ë—Ç –∏ –Ω–µ —É—Å–ø–µ–≤–∞–µ—Ç —Å–ª–µ–¥–∏—Ç—å –∑–∞ –¥–æ–º–æ–º",
        "product": "–†–æ–±–æ—Ç-–ø—ã–ª–µ—Å–æ—Å —Å –≥–æ–ª–æ—Å–æ–≤—ã–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º"
    },
    {
        "audience": "–§—Ä–∏–ª–∞–Ω—Å–µ—Ä-–¥–∏–∑–∞–π–Ω–µ—Ä, 32 –≥–æ–¥–∞",
        "problem": "–ù—É–∂–µ–Ω –ø–æ—Ç–æ–∫ –∑–∞–∫–∞–∑–æ–≤, –Ω–æ –Ω–µ—Ç –ª–∏—á–Ω–æ–≥–æ –±—Ä–µ–Ω–¥–∞",
        "product": "–û–Ω–ª–∞–π–Ω-–∫—É—Ä—Å –ø–æ –ª–∏—á–Ω–æ–º—É –±—Ä–µ–Ω–¥—É"
    },
    {
        "audience": "–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å, 45 –ª–µ—Ç",
        "problem": "–ú–Ω–æ–≥–æ —Ä—É—Ç–∏–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –æ—Ç–Ω–∏–º–∞–µ—Ç –≤—Ä–µ–º—è",
        "product": "AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –±–∏–∑–Ω–µ—Å–∞"
    },
    {
        "audience": "–®–∫–æ–ª—å–Ω–∏–∫, 15 –ª–µ—Ç",
        "problem": "–°–ª–æ–∂–Ω–æ –ø–æ–Ω—è—Ç—å –∞–ª–≥–µ–±—Ä—É",
        "product": "–ì–µ–π–º–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫—É—Ä—Å –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ"
    },
]

# üîÅ –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞
if st.button("üé≤ –°–ª—É—á–∞–π–Ω—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞"):
    profile = random.choice(random_profiles)
    st.session_state["audience"] = profile["audience"]
    st.session_state["problem"] = profile["problem"]
    st.session_state["product"] = profile["product"]

# üì• –ü–æ–ª—è –≤–≤–æ–¥–∞ —Å –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∏–∑ session_state
audience = st.text_input("üë• –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è", value=st.session_state.get("audience", ""))
problem = st.text_area("üí¢ –ü—Ä–æ–±–ª–µ–º–∞ –∏–ª–∏ –±–æ–ª—å –∫–ª–∏–µ–Ω—Ç–∞", value=st.session_state.get("problem", ""))
product = st.text_input("üì¶ –ü—Ä–æ–¥—É–∫—Ç/—É—Å–ª—É–≥–∞", value=st.session_state.get("product", ""))


model_option = st.selectbox("üìå –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∫–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥–∞", ["–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ –≤—Å–µ–º"] + list(PROMPT_MODELS.keys()))

if st.button("üöÄ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–µ–∞—Ç–∏–≤"):
    with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞..."):
        system_prompt = (
            f"–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä. –ù–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:\n"
            f"- –ê—É–¥–∏—Ç–æ—Ä–∏—è: {audience}\n"
            f"- –ü—Ä–æ–±–ª–µ–º–∞: {problem}\n"
            f"- –ü—Ä–æ–¥—É–∫—Ç: {product}\n"
        )

        if model_option == "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ –≤—Å–µ–º":
            for model_name, model_prompt in PROMPT_MODELS.items():
                full_prompt = system_prompt + f"{model_prompt}\n–°—Ñ–æ—Ä–º–∏—Ä—É–π –∫—Ä–µ–∞—Ç–∏–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n1. –ó–∞–≥–æ–ª–æ–≤–æ–∫ ‚Äî –º–∞–∫—Å–∏–º—É–º 56 —Å–∏–º–≤–æ–ª–æ–≤\n2. –û—Ñ—Ñ–µ—Ä ‚Äî –º–∞–∫—Å–∏–º—É–º 81 —Å–∏–º–≤–æ–ª\n3. –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é ‚Äî –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤\n4. –û–ø–∏—Å–∞–Ω–∏–µ ‚Äî –¥–æ 81 —Å–∏–º–≤–æ–ª–∞, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ø–Ω–¥–µ–∫—Å –î–∏—Ä–µ–∫—Ç\n\n–ü–∏—à–∏ —á—ë—Ç–∫–æ, –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ, –ø–æ –¥–µ–ª—É. –ë–µ–∑ –≤–æ–¥—ã –∏ –æ–±—â–∏—Ö —Å–ª–æ–≤."
                client = openai.OpenAI(api_key=openai.api_key)
                response = client.chat.completions.create(
                    model="gpt-4o",
                    messages=[{"role": "user", "content": full_prompt}]
                )
                answer = response.choices[0].message.content
                st.subheader(model_name)
                st.markdown(f"```text\n{answer}\n```")
        else:
            model_prompt = PROMPT_MODELS[model_option]
            full_prompt = system_prompt + f"{model_prompt}\n–°–æ–∑–¥–∞–π –∫—Ä–µ–∞—Ç–∏–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –∑–∞–≥–æ–ª–æ–≤–æ–∫, –æ—Ñ—Ñ–µ—Ä, –ø—Ä–∏–∑—ã–≤, –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –Ø–Ω–¥–µ–∫—Å –î–∏—Ä–µ–∫—Ç."
            client = openai.OpenAI(api_key=openai.api_key)
            response = client.chat.completions.create(
                model="gpt-4o",
                messages=[{"role": "user", "content": full_prompt}]
            )
            answer = response.choices[0].message.content
            st.markdown("### ‚ú® –†–µ–∑—É–ª—å—Ç–∞—Ç:")
            st.markdown(f"```text\n{answer}\n```")
            
            
            import streamlit as st

with st.expander("üí¨ –ú–Ω–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç..."):
    st.markdown("–ï—Å–ª–∏ –≤–∞–º —á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –≤ —ç—Ç–æ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–µ ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å —ç—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å üôå")
    feedback = st.text_area("–ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å?", placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: —ç–∫—Å–ø–æ—Ä—Ç –≤ PDF, –±–æ–ª—å—à–µ —à–∞–±–ª–æ–Ω–æ–≤, –∞–≤—Ç–æ–ø–æ–¥–±–æ—Ä –∫–∞—Ä—Ç–∏–Ω–æ–∫...")
    user_email = st.text_input("–í–∞—à–∞ –ø–æ—á—Ç–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)", placeholder="example@mail.com")

    if st.button("üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"):
        with open("feedback_log.txt", "a", encoding="utf-8") as f:
            f.write(f"–û—Ç–∑—ã–≤:\n{feedback}\nEmail: {user_email}\n---\n")
        st.success("–°–ø–∞—Å–∏–±–æ! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ üôè")

