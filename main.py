import os
import streamlit as st
import openai
import random
from prompt_templates import PROMPT_MODELS

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenAI API
openai.api_key = os.getenv("OPENAI_API_KEY")

st.set_page_config(page_title="AI-–∫—Ä–µ–∞—Ç–∏–≤—ã", page_icon="üéØ", layout="centered")
st.title("üéØ AI‚Äë–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ –ø–æ 13 —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º –ø—Ä–æ–¥–∞—é—â–µ–≥–æ —Ç–µ–∫—Å—Ç–∞")

# –ö–Ω–æ–ø–∫–∞ –ø–æ–º–æ—â–∏
if st.button("‚Ñπ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç"):
    st.session_state.show_help = not st.session_state.get("show_help", False)

if st.session_state.get("show_help", False):
    st.markdown("---")
    st.markdown("## ‚ùì –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç")
    st.markdown("""
    1. **–í–≤–µ–¥–∏—Ç–µ:**
       - üéØ –¶–ê
       - üí¢ –ü—Ä–æ–±–ª–µ–º—É
       - üì¶ –ü—Ä–æ–¥—É–∫—Ç

    2. **–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∫–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥–∞**
    3. **–ù–∞–∂–º–∏—Ç–µ ‚Äú–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å‚Äù**
    """)
    st.markdown("---")

# –°–ª—É—á–∞–π–Ω—ã–µ –ø–æ—Ä—Ç—Ä–µ—Ç—ã
random_profiles = [
    {"audience": "–ú–æ–ª–æ–¥–∞—è –º–∞–º–∞, 28 –ª–µ—Ç", "problem": "–£—Å—Ç–∞—ë—Ç –∏ –Ω–µ —É—Å–ø–µ–≤–∞–µ—Ç —Å–ª–µ–¥–∏—Ç—å –∑–∞ –¥–æ–º–æ–º", "product": "–†–æ–±–æ—Ç-–ø—ã–ª–µ—Å–æ—Å"},
    {"audience": "–§—Ä–∏–ª–∞–Ω—Å–µ—Ä-–¥–∏–∑–∞–π–Ω–µ—Ä, 32 –≥–æ–¥–∞", "problem": "–ù–µ—Ç –ª–∏—á–Ω–æ–≥–æ –±—Ä–µ–Ω–¥–∞", "product": "–ö—É—Ä—Å –ø–æ –±—Ä–µ–Ω–¥–∏–Ω–≥—É"},
]

if st.button("üé≤ –°–ª—É—á–∞–π–Ω—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞"):
    profile = random.choice(random_profiles)
    st.session_state["audience"] = profile["audience"]
    st.session_state["problem"] = profile["problem"]
    st.session_state["product"] = profile["product"]

audience = st.text_input("üë• –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è", value=st.session_state.get("audience", ""))
problem = st.text_area("üí¢ –ü—Ä–æ–±–ª–µ–º–∞ –∫–ª–∏–µ–Ω—Ç–∞", value=st.session_state.get("problem", ""))
product = st.text_input("üì¶ –ü—Ä–æ–¥—É–∫—Ç/—É—Å–ª—É–≥–∞", value=st.session_state.get("product", ""))

model_option = st.selectbox("üìå –ú–æ–¥–µ–ª—å –∫–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥–∞", ["–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ –≤—Å–µ–º"] + list(PROMPT_MODELS.keys()))

if st.button("üöÄ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–µ–∞—Ç–∏–≤"):
    with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞..."):
        system_prompt = (
            f"–¢—ã ‚Äî –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä. –ù–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:\n"
            f"- –ê—É–¥–∏—Ç–æ—Ä–∏—è: {audience}\n"
            f"- –ü—Ä–æ–±–ª–µ–º–∞: {problem}\n"
            f"- –ü—Ä–æ–¥—É–∫—Ç: {product}\n"
        )

        if model_option == "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ –≤—Å–µ–º":
            for model_name, model_prompt in PROMPT_MODELS.items():
                full_prompt = system_prompt + model_prompt + """
–°—Ñ–æ—Ä–º–∏—Ä—É–π –∫—Ä–µ–∞—Ç–∏–≤:
1. –ó–∞–≥–æ–ª–æ–≤–æ–∫ ‚Äî –¥–æ 56 —Å–∏–º–≤–æ–ª–æ–≤
2. –û—Ñ—Ñ–µ—Ä ‚Äî –¥–æ 81 —Å–∏–º–≤–æ–ª
3. –ü—Ä–∏–∑—ã–≤ ‚Äî –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤
4. –û–ø–∏—Å–∞–Ω–∏–µ ‚Äî –¥–æ 81 —Å–∏–º–≤–æ–ª–∞ –¥–ª—è –Ø–Ω–¥–µ–∫—Å –î–∏—Ä–µ–∫—Ç
"""
                response = openai.chat.completions.create(
                    model="gpt-4o",
                    messages=[{"role": "user", "content": full_prompt}]
                )
                answer = response.choices[0].message.content
                st.subheader(model_name)
                st.markdown(f"```text\n{answer}\n```")
        else:
            model_prompt = PROMPT_MODELS[model_option]
            full_prompt = system_prompt + model_prompt
            response = openai.chat.completions.create(
                model="gpt-4o",
                messages=[{"role": "user", "content": full_prompt}]
            )
            answer = response.choices[0].message.content
            st.markdown("### ‚ú® –†–µ–∑—É–ª—å—Ç–∞—Ç:")
            st.markdown(f"```text\n{answer}\n```")

# –ë–ª–æ–∫ –æ—Ç–∑—ã–≤–∞
with st.expander("üí¨ –ú–Ω–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç..."):
    st.markdown("–ß—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç? –ù–∞–ø–∏—à–∏ üëá")
    feedback = st.text_area("–í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ")
    user_email = st.text_input("–ü–æ—á—Ç–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
    if st.button("üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"):
        with open("feedback_log.txt", "a", encoding="utf-8") as f:
            f.write(f"–û—Ç–∑—ã–≤:\n{feedback}\nEmail: {user_email}\n---\n")
        st.success("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!")
        
        st.markdown("---")
        st.markdown("---")
# –ö–Ω–æ–ø–∫–∞ –∑–∞–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É
st.markdown(
    """
    <div style='text-align: center; font-size: 16px; margin-top: 30px;'>
        <a href="https://promarketer.tilda.ws/" target="_blank" style="text-decoration: none; color: #1f77b4;">
            üëâ –ó–∞–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –Ø–Ω–¥–µ–∫—Å –î–∏—Ä–µ–∫—Ç
        </a>
    </div>
    """,
    unsafe_allow_html=True
)

                
